0 declar s1
0 declar_func s2
0 declar_list s3
0 declar_var s4
0 int s8
0 program s5
0 type_func s6
0 type_var s7
0 void s9
1 # r2
1 int r2
1 void r2
2 # r4
2 int r4
2 void r4
3 # r0
3 declar s10
3 declar_func s2
3 declar_var s4
3 int s8
3 type_func s6
3 type_var s7
3 void s9
4 # r3
4 int r3
4 void r3
5 # acc
6 ID s11
7 ID s12
8 ID r7
9 ID r10
10 # r1
10 int r1
10 void r1
11 ( s13
12 ; s14
12 [ s15
13 ) r13
13 int s20
13 param s16
13 param_list s17
13 params s18
13 type_var s19
13 void s21
14 # r5
14 int r5
14 void r5
15 NUM s22
16 ) r15
16 , r15
17 ) r11
17 , s24
18 ) s25
19 ID s23
20 ID r7
21 ) r12
22 ] s26
23 ) r16
23 , r16
23 [ s27
24 int s20
24 param s28
24 type_var s19
25 compou_body s29
25 { s30
26 ; s31
27 NUM s32
27 ] s33
28 ) r14
28 , r14
29 # r8
29 int r8
29 void r8
30 ( r20
30 ; r20
30 ID r20
30 N1 s34
30 NUM r20
30 if r20
30 int r20
30 return r20
30 while r20
30 { r20
30 } r20
31 # r6
31 int r6
31 void r6
32 ] s36
33 ) r17
33 , r17
34 ( r22
34 ; r22
34 ID r22
34 NUM r22
34 declar_local s35
34 if r22
34 int r22
34 return r22
34 while r22
34 { r22
34 } r22
35 ( r24
35 ; r24
35 ID r24
35 NUM r24
35 code s37
35 declar_var s38
35 if r24
35 int s20
35 return r24
35 type_var s39
35 while r24
35 { r24
35 } r24
36 ) r18
36 , r18
37 ( r36
37 ; r36
37 ID r36
37 M s41
37 NUM r36
37 if r36
37 return r36
37 while r36
37 { r36
37 } s42
38 ( r21
38 ; r21
38 ID r21
38 NUM r21
38 if r21
38 int r21
38 return r21
38 while r21
38 { r21
38 } r21
39 ID s40
40 ; s66
40 [ s67
41 ( s56
41 ; s57
41 ID s58
41 NUM s59
41 call s43
41 compou_body s44
41 expre s45
41 expre_arith s46
41 expre_rel s47
41 factor s48
41 if s60
41 lines s49
41 lines_asg s50
41 lines_loop s51
41 lines_return s52
41 lines_select s53
41 return s61
41 term s54
41 var s55
41 while s62
41 { s63
42 # r19
42 int r19
42 void r19
43 != r61
43 * r61
43 + r61
43 - r61
43 / r61
43 ; r61
43 < r61
43 <= r61
43 == r61
43 > r61
43 >= r61
44 ( r29
44 ; r29
44 ID r29
44 NUM r29
44 if r29
44 return r29
44 while r29
44 { r29
44 } r29
45 ; s82
46 != s71
46 + s72
46 - s73
46 ; r44
46 < s74
46 <= s75
46 == s76
46 > s77
46 >= s78
46 op_add s69
46 op_rel s70
47 ; r40
48 != r56
48 * r56
48 + r56
48 - r56
48 / r56
48 ; r56
48 < r56
48 <= r56
48 == r56
48 > r56
48 >= r56
49 ( r23
49 ; r23
49 ID r23
49 NUM r23
49 if r23
49 return r23
49 while r23
49 { r23
49 } r23
50 ( r25
50 ; r25
50 ID r25
50 NUM r25
50 if r25
50 return r25
50 while r25
50 { r25
50 } r25
51 ( r27
51 ; r27
51 ID r27
51 NUM r27
51 if r27
51 return r27
51 while r27
51 { r27
51 } r27
52 ( r28
52 ; r28
52 ID r28
52 NUM r28
52 if r28
52 return r28
52 while r28
52 { r28
52 } r28
53 ( r26
53 ; r26
53 ID r26
53 NUM r26
53 if r26
53 return r26
53 while r26
53 { r26
53 } r26
54 != r52
54 * s80
54 + r52
54 - r52
54 / s81
54 ; r52
54 < r52
54 <= r52
54 == r52
54 > r52
54 >= r52
54 op_mul s79
55 != r60
55 * r60
55 + r60
55 - r60
55 / r60
55 ; r60
55 < r60
55 <= r60
55 = s68
55 == r60
55 > r60
55 >= r60
56 ( s96
56 ID s97
56 NUM s98
56 call s89
56 expre s90
56 expre_arith s91
56 expre_rel s92
56 factor s93
56 term s94
56 var s95
57 ( r31
57 ; r31
57 ID r31
57 NUM r31
57 if r31
57 return r31
57 while r31
57 { r31
57 } r31
58 != r41
58 ( s87
58 * r41
58 + r41
58 - r41
58 / r41
58 ; r41
58 < r41
58 <= r41
58 = r41
58 == r41
58 > r41
58 >= r41
58 [ s88
59 != r62
59 * r62
59 + r62
59 - r62
59 / r62
59 ; r62
59 < r62
59 <= r62
59 == r62
59 > r62
59 >= r62
60 ( s84
61 ( s56
61 ; s65
61 ID s58
61 NUM s59
61 call s43
61 expre s64
61 expre_arith s46
61 expre_rel s47
61 factor s48
61 term s54
61 var s55
62 ( r36
62 M s85
63 ( r20
63 ; r20
63 ID r20
63 N1 s86
63 NUM r20
63 if r20
63 int r20
63 return r20
63 while r20
63 { r20
63 } r20
64 ; s83
65 ( r37
65 ; r37
65 ID r37
65 NUM r37
65 if r37
65 return r37
65 while r37
65 { r37
65 } r37
66 ( r5
66 ; r5
66 ID r5
66 NUM r5
66 if r5
66 int r5
66 return r5
66 while r5
66 { r5
66 } r5
67 NUM s124
68 ( s56
68 ID s58
68 NUM s59
68 call s43
68 expre s100
68 expre_arith s46
68 expre_rel s47
68 factor s48
68 term s54
68 var s55
69 ( s56
69 ID s103
69 NUM s59
69 call s43
69 factor s48
69 term s101
69 var s102
70 ( s120
70 ID s121
70 NUM s122
70 call s115
70 expre_arith s116
70 factor s117
70 term s118
70 var s119
71 ( r50
71 ID r50
71 NUM r50
72 ( r53
72 ID r53
72 NUM r53
73 ( r54
73 ID r54
73 NUM r54
74 ( r46
74 ID r46
74 NUM r46
75 ( r45
75 ID r45
75 NUM r45
76 ( r49
76 ID r49
76 NUM r49
77 ( r47
77 ID r47
77 NUM r47
78 ( r48
78 ID r48
78 NUM r48
79 ( s56
79 ID s103
79 NUM s59
79 call s43
79 factor s104
79 var s102
80 ( r57
80 ID r57
80 NUM r57
81 ( r58
81 ID r58
81 NUM r58
82 ( r30
82 ; r30
82 ID r30
82 NUM r30
82 if r30
82 return r30
82 while r30
82 { r30
82 } r30
83 ( r38
83 ; r38
83 ID r38
83 NUM r38
83 if r38
83 return r38
83 while r38
83 { r38
83 } r38
84 ( s96
84 ID s97
84 NUM s98
84 call s89
84 expre s99
84 expre_arith s91
84 expre_rel s92
84 factor s93
84 term s94
84 var s95
85 ( s136
86 ( r22
86 ; r22
86 ID r22
86 NUM r22
86 declar_local s123
86 if r22
86 int r22
86 return r22
86 while r22
86 { r22
86 } r22
87 ( s149
87 ) r65
87 ID s150
87 NUM s151
87 arg_list s140
87 args s141
87 call s142
87 expre s143
87 expre_arith s144
87 expre_rel s145
87 factor s146
87 term s147
87 var s148
88 ( s112
88 ID s113
88 NUM s114
88 call s105
88 expre s106
88 expre_arith s107
88 expre_rel s108
88 factor s109
88 term s110
88 var s111
89 != r61
89 ) r61
89 * r61
89 + r61
89 - r61
89 / r61
89 < r61
89 <= r61
89 == r61
89 > r61
89 >= r61
90 ) s135
91 != s71
91 ) r44
91 + s72
91 - s73
91 < s74
91 <= s75
91 == s76
91 > s77
91 >= s78
91 op_add s127
91 op_rel s128
92 ) r40
93 != r56
93 ) r56
93 * r56
93 + r56
93 - r56
93 / r56
93 < r56
93 <= r56
93 == r56
93 > r56
93 >= r56
94 != r52
94 ) r52
94 * s80
94 + r52
94 - r52
94 / s81
94 < r52
94 <= r52
94 == r52
94 > r52
94 >= r52
94 op_mul s132
95 != r60
95 ) r60
95 * r60
95 + r60
95 - r60
95 / r60
95 < r60
95 <= r60
95 = s125
95 == r60
95 > r60
95 >= r60
96 ( s96
96 ID s97
96 NUM s98
96 call s89
96 expre s164
96 expre_arith s91
96 expre_rel s92
96 factor s93
96 term s94
96 var s95
97 != r41
97 ( s155
97 ) r41
97 * r41
97 + r41
97 - r41
97 / r41
97 < r41
97 <= r41
97 = r41
97 == r41
97 > r41
97 >= r41
97 [ s156
98 != r62
98 ) r62
98 * r62
98 + r62
98 - r62
98 / r62
98 < r62
98 <= r62
98 == r62
98 > r62
98 >= r62
99 ) s137
100 ; r39
101 != r51
101 * s80
101 + r51
101 - r51
101 / s81
101 ; r51
101 < r51
101 <= r51
101 == r51
101 > r51
101 >= r51
101 op_mul s79
102 != r60
102 * r60
102 + r60
102 - r60
102 / r60
102 ; r60
102 < r60
102 <= r60
102 == r60
102 > r60
102 >= r60
103 != r41
103 ( s87
103 * r41
103 + r41
103 - r41
103 / r41
103 ; r41
103 < r41
103 <= r41
103 == r41
103 > r41
103 >= r41
103 [ s157
104 != r55
104 * r55
104 + r55
104 - r55
104 / r55
104 ; r55
104 < r55
104 <= r55
104 == r55
104 > r55
104 >= r55
105 != r61
105 * r61
105 + r61
105 - r61
105 / r61
105 < r61
105 <= r61
105 == r61
105 > r61
105 >= r61
105 ] r61
106 ] s138
107 != s71
107 + s72
107 - s73
107 < s74
107 <= s75
107 == s76
107 > s77
107 >= s78
107 ] r44
107 op_add s129
107 op_rel s130
108 ] r40
109 != r56
109 * r56
109 + r56
109 - r56
109 / r56
109 < r56
109 <= r56
109 == r56
109 > r56
109 >= r56
109 ] r56
110 != r52
110 * s80
110 + r52
110 - r52
110 / s81
110 < r52
110 <= r52
110 == r52
110 > r52
110 >= r52
110 ] r52
110 op_mul s133
111 != r60
111 * r60
111 + r60
111 - r60
111 / r60
111 < r60
111 <= r60
111 = s126
111 == r60
111 > r60
111 >= r60
111 ] r60
112 ( s96
112 ID s97
112 NUM s98
112 call s89
112 expre s165
112 expre_arith s91
112 expre_rel s92
112 factor s93
112 term s94
112 var s95
113 != r41
113 ( s158
113 * r41
113 + r41
113 - r41
113 / r41
113 < r41
113 <= r41
113 = r41
113 == r41
113 > r41
113 >= r41
113 [ s159
113 ] r41
114 != r62
114 * r62
114 + r62
114 - r62
114 / r62
114 < r62
114 <= r62
114 == r62
114 > r62
114 >= r62
114 ] r62
115 * r61
115 + r61
115 - r61
115 / r61
115 ; r61
116 + s72
116 - s73
116 ; r43
116 op_add s131
117 * r56
117 + r56
117 - r56
117 / r56
117 ; r56
118 * s80
118 + r52
118 - r52
118 / s81
118 ; r52
118 op_mul s134
119 * r60
119 + r60
119 - r60
119 / r60
119 ; r60
120 ( s96
120 ID s97
120 NUM s98
120 call s89
120 expre s166
120 expre_arith s91
120 expre_rel s92
120 factor s93
120 term s94
120 var s95
121 ( s160
121 * r41
121 + r41
121 - r41
121 / r41
121 ; r41
121 [ s161
122 * r62
122 + r62
122 - r62
122 / r62
122 ; r62
123 ( r24
123 ; r24
123 ID r24
123 NUM r24
123 code s214
123 declar_var s38
123 if r24
123 int s20
123 return r24
123 type_var s39
123 while r24
123 { r24
123 } r24
124 ] s215
125 ( s96
125 ID s97
125 NUM s98
125 call s89
125 expre s162
125 expre_arith s91
125 expre_rel s92
125 factor s93
125 term s94
125 var s95
126 ( s112
126 ID s113
126 NUM s114
126 call s105
126 expre s186
126 expre_arith s107
126 expre_rel s108
126 factor s109
126 term s110
126 var s111
127 ( s96
127 ID s170
127 NUM s98
127 call s89
127 factor s93
127 term s168
127 var s169
128 ( s201
128 ID s202
128 NUM s203
128 call s196
128 expre_arith s197
128 factor s198
128 term s199
128 var s200
129 ( s112
129 ID s194
129 NUM s114
129 call s105
129 factor s109
129 term s192
129 var s193
130 ( s211
130 ID s212
130 NUM s213
130 call s206
130 expre_arith s207
130 factor s208
130 term s209
130 var s210
131 ( s120
131 ID s121
131 NUM s122
131 call s115
131 factor s117
131 term s204
131 var s119
132 ( s96
132 ID s170
132 NUM s98
132 call s89
132 factor s171
132 var s169
133 ( s112
133 ID s194
133 NUM s114
133 call s105
133 factor s195
133 var s193
134 ( s120
134 ID s121
134 NUM s122
134 call s115
134 factor s205
134 var s119
135 != r59
135 * r59
135 + r59
135 - r59
135 / r59
135 ; r59
135 < r59
135 <= r59
135 == r59
135 > r59
135 >= r59
136 ( s96
136 ID s97
136 NUM s98
136 call s89
136 expre s167
136 expre_arith s91
136 expre_rel s92
136 factor s93
136 term s94
136 var s95
137 ( r36
137 ; r36
137 ID r36
137 M s139
137 NUM r36
137 if r36
137 return r36
137 while r36
137 { r36
138 != r42
138 * r42
138 + r42
138 - r42
138 / r42
138 ; r42
138 < r42
138 <= r42
138 = r42
138 == r42
138 > r42
138 >= r42
139 ( s56
139 ; s179
139 ID s58
139 NUM s59
139 call s43
139 compou_body s172
139 expre s173
139 expre_arith s46
139 expre_rel s47
139 factor s48
139 if s180
139 lines s174
139 lines_asg s175
139 lines_loop s176
139 lines_return s177
139 lines_select s178
139 return s181
139 term s54
139 var s55
139 while s182
139 { s183
140 ) r64
140 , s242
141 ) s152
142 != r61
142 ) r61
142 * r61
142 + r61
142 , r61
142 - r61
142 / r61
142 < r61
142 <= r61
142 == r61
142 > r61
142 >= r61
143 ) r67
143 , r67
144 != s71
144 ) r44
144 + s72
144 , r44
144 - s73
144 < s74
144 <= s75
144 == s76
144 > s77
144 >= s78
144 op_add s217
144 op_rel s218
145 ) r40
145 , r40
146 != r56
146 ) r56
146 * r56
146 + r56
146 , r56
146 - r56
146 / r56
146 < r56
146 <= r56
146 == r56
146 > r56
146 >= r56
147 != r52
147 ) r52
147 * s80
147 + r52
147 , r52
147 - r52
147 / s81
147 < r52
147 <= r52
147 == r52
147 > r52
147 >= r52
147 op_mul s221
148 != r60
148 ) r60
148 * r60
148 + r60
148 , r60
148 - r60
148 / r60
148 < r60
148 <= r60
148 = s216
148 == r60
148 > r60
148 >= r60
149 ( s96
149 ID s97
149 NUM s98
149 call s89
149 expre s163
149 expre_arith s91
149 expre_rel s92
149 factor s93
149 term s94
149 var s95
150 != r41
150 ( s153
150 ) r41
150 * r41
150 + r41
150 , r41
150 - r41
150 / r41
150 < r41
150 <= r41
150 = r41
150 == r41
150 > r41
150 >= r41
150 [ s154
151 != r62
151 ) r62
151 * r62
151 + r62
151 , r62
151 - r62
151 / r62
151 < r62
151 <= r62
151 == r62
151 > r62
151 >= r62
152 != r63
152 * r63
152 + r63
152 - r63
152 / r63
152 ; r63
152 < r63
152 <= r63
152 == r63
152 > r63
152 >= r63
153 ( s149
153 ) r65
153 ID s150
153 NUM s151
153 arg_list s140
153 args s243
153 call s142
153 expre s143
153 expre_arith s144
153 expre_rel s145
153 factor s146
153 term s147
153 var s148
154 ( s112
154 ID s113
154 NUM s114
154 call s105
154 expre s187
154 expre_arith s107
154 expre_rel s108
154 factor s109
154 term s110
154 var s111
155 ( s149
155 ) r65
155 ID s150
155 NUM s151
155 arg_list s140
155 args s244
155 call s142
155 expre s143
155 expre_arith s144
155 expre_rel s145
155 factor s146
155 term s147
155 var s148
156 ( s112
156 ID s113
156 NUM s114
156 call s105
156 expre s188
156 expre_arith s107
156 expre_rel s108
156 factor s109
156 term s110
156 var s111
157 ( s112
157 ID s113
157 NUM s114
157 call s105
157 expre s189
157 expre_arith s107
157 expre_rel s108
157 factor s109
157 term s110
157 var s111
158 ( s149
158 ) r65
158 ID s150
158 NUM s151
158 arg_list s140
158 args s245
158 call s142
158 expre s143
158 expre_arith s144
158 expre_rel s145
158 factor s146
158 term s147
158 var s148
159 ( s112
159 ID s113
159 NUM s114
159 call s105
159 expre s190
159 expre_arith s107
159 expre_rel s108
159 factor s109
159 term s110
159 var s111
160 ( s149
160 ) r65
160 ID s150
160 NUM s151
160 arg_list s140
160 args s246
160 call s142
160 expre s143
160 expre_arith s144
160 expre_rel s145
160 factor s146
160 term s147
160 var s148
161 ( s112
161 ID s113
161 NUM s114
161 call s105
161 expre s191
161 expre_arith s107
161 expre_rel s108
161 factor s109
161 term s110
161 var s111
162 ) r39
163 ) s224
164 ) s225
165 ) s226
166 ) s227
167 ) s229
168 != r51
168 ) r51
168 * s80
168 + r51
168 - r51
168 / s81
168 < r51
168 <= r51
168 == r51
168 > r51
168 >= r51
168 op_mul s132
169 != r60
169 ) r60
169 * r60
169 + r60
169 - r60
169 / r60
169 < r60
169 <= r60
169 == r60
169 > r60
169 >= r60
170 != r41
170 ( s155
170 ) r41
170 * r41
170 + r41
170 - r41
170 / r41
170 < r41
170 <= r41
170 == r41
170 > r41
170 >= r41
170 [ s251
171 != r55
171 ) r55
171 * r55
171 + r55
171 - r55
171 / r55
171 < r55
171 <= r55
171 == r55
171 > r55
171 >= r55
172 ( r29
172 ; r29
172 ID r29
172 NUM r29
172 else r29
172 if r29
172 return r29
172 while r29
172 { r29
172 } r29
173 ; s228
174 ( r32
174 ; r32
174 ID r32
174 N2 s241
174 NUM r32
174 else r35
174 if r32
174 return r32
174 while r32
174 { r32
174 } r32
175 ( r25
175 ; r25
175 ID r25
175 NUM r25
175 else r25
175 if r25
175 return r25
175 while r25
175 { r25
175 } r25
176 ( r27
176 ; r27
176 ID r27
176 NUM r27
176 else r27
176 if r27
176 return r27
176 while r27
176 { r27
176 } r27
177 ( r28
177 ; r28
177 ID r28
177 NUM r28
177 else r28
177 if r28
177 return r28
177 while r28
177 { r28
177 } r28
178 ( r26
178 ; r26
178 ID r26
178 NUM r26
178 else r26
178 if r26
178 return r26
178 while r26
178 { r26
178 } r26
179 ( r31
179 ; r31
179 ID r31
179 NUM r31
179 else r31
179 if r31
179 return r31
179 while r31
179 { r31
179 } r31
180 ( s231
181 ( s56
181 ; s185
181 ID s58
181 NUM s59
181 call s43
181 expre s184
181 expre_arith s46
181 expre_rel s47
181 factor s48
181 term s54
181 var s55
182 ( r36
182 M s239
183 ( r20
183 ; r20
183 ID r20
183 N1 s240
183 NUM r20
183 if r20
183 int r20
183 return r20
183 while r20
183 { r20
183 } r20
184 ; s230
185 ( r37
185 ; r37
185 ID r37
185 NUM r37
185 else r37
185 if r37
185 return r37
185 while r37
185 { r37
185 } r37
186 ] r39
187 ] s232
188 ] s233
189 ] s234
190 ] s235
191 ] s236
192 != r51
192 * s80
192 + r51
192 - r51
192 / s81
192 < r51
192 <= r51
192 == r51
192 > r51
192 >= r51
192 ] r51
192 op_mul s133
193 != r60
193 * r60
193 + r60
193 - r60
193 / r60
193 < r60
193 <= r60
193 == r60
193 > r60
193 >= r60
193 ] r60
194 != r41
194 ( s158
194 * r41
194 + r41
194 - r41
194 / r41
194 < r41
194 <= r41
194 == r41
194 > r41
194 >= r41
194 [ s252
194 ] r41
195 != r55
195 * r55
195 + r55
195 - r55
195 / r55
195 < r55
195 <= r55
195 == r55
195 > r55
195 >= r55
195 ] r55
196 ) r61
196 * r61
196 + r61
196 - r61
196 / r61
197 ) r43
197 + s72
197 - s73
197 op_add s219
198 ) r56
198 * r56
198 + r56
198 - r56
198 / r56
199 ) r52
199 * s80
199 + r52
199 - r52
199 / s81
199 op_mul s222
200 ) r60
200 * r60
200 + r60
200 - r60
200 / r60
201 ( s96
201 ID s97
201 NUM s98
201 call s89
201 expre s262
201 expre_arith s91
201 expre_rel s92
201 factor s93
201 term s94
201 var s95
202 ( s253
202 ) r41
202 * r41
202 + r41
202 - r41
202 / r41
202 [ s254
203 ) r62
203 * r62
203 + r62
203 - r62
203 / r62
204 * s80
204 + r51
204 - r51
204 / s81
204 ; r51
204 op_mul s134
205 * r55
205 + r55
205 - r55
205 / r55
205 ; r55
206 * r61
206 + r61
206 - r61
206 / r61
206 ] r61
207 + s72
207 - s73
207 ] r43
207 op_add s220
208 * r56
208 + r56
208 - r56
208 / r56
208 ] r56
209 * s80
209 + r52
209 - r52
209 / s81
209 ] r52
209 op_mul s223
210 * r60
210 + r60
210 - r60
210 / r60
210 ] r60
211 ( s96
211 ID s97
211 NUM s98
211 call s89
211 expre s263
211 expre_arith s91
211 expre_rel s92
211 factor s93
211 term s94
211 var s95
212 ( s255
212 * r41
212 + r41
212 - r41
212 / r41
212 [ s256
212 ] r41
213 * r62
213 + r62
213 - r62
213 / r62
213 ] r62
214 ( r36
214 ; r36
214 ID r36
214 M s41
214 NUM r36
214 if r36
214 return r36
214 while r36
214 { r36
214 } s237
215 ; s283
216 ( s149
216 ID s150
216 NUM s151
216 call s142
216 expre s257
216 expre_arith s144
216 expre_rel s145
216 factor s146
216 term s147
216 var s148
217 ( s149
217 ID s260
217 NUM s151
217 call s142
217 factor s146
217 term s258
217 var s259
218 ( s275
218 ID s276
218 NUM s277
218 call s270
218 expre_arith s271
218 factor s272
218 term s273
218 var s274
219 ( s201
219 ID s202
219 NUM s203
219 call s196
219 factor s198
219 term s278
219 var s200
220 ( s211
220 ID s212
220 NUM s213
220 call s206
220 factor s208
220 term s280
220 var s210
221 ( s149
221 ID s260
221 NUM s151
221 call s142
221 factor s261
221 var s259
222 ( s201
222 ID s202
222 NUM s203
222 call s196
222 factor s279
222 var s200
223 ( s211
223 ID s212
223 NUM s213
223 call s206
223 factor s281
223 var s210
224 != r59
224 ) r59
224 * r59
224 + r59
224 , r59
224 - r59
224 / r59
224 < r59
224 <= r59
224 == r59
224 > r59
224 >= r59
225 != r59
225 ) r59
225 * r59
225 + r59
225 - r59
225 / r59
225 < r59
225 <= r59
225 == r59
225 > r59
225 >= r59
226 != r59
226 * r59
226 + r59
226 - r59
226 / r59
226 < r59
226 <= r59
226 == r59
226 > r59
226 >= r59
226 ] r59
227 * r59
227 + r59
227 - r59
227 / r59
227 ; r59
228 ( r30
228 ; r30
228 ID r30
228 NUM r30
228 else r30
228 if r30
228 return r30
228 while r30
228 { r30
228 } r30
229 ( r36
229 ; r36
229 ID r36
229 M s238
229 NUM r36
229 if r36
229 return r36
229 while r36
229 { r36
230 ( r38
230 ; r38
230 ID r38
230 NUM r38
230 else r38
230 if r38
230 return r38
230 while r38
230 { r38
230 } r38
231 ( s96
231 ID s97
231 NUM s98
231 call s89
231 expre s264
231 expre_arith s91
231 expre_rel s92
231 factor s93
231 term s94
231 var s95
232 != r42
232 ) r42
232 * r42
232 + r42
232 , r42
232 - r42
232 / r42
232 < r42
232 <= r42
232 = r42
232 == r42
232 > r42
232 >= r42
233 != r42
233 ) r42
233 * r42
233 + r42
233 - r42
233 / r42
233 < r42
233 <= r42
233 = r42
233 == r42
233 > r42
233 >= r42
234 != r42
234 * r42
234 + r42
234 - r42
234 / r42
234 ; r42
234 < r42
234 <= r42
234 == r42
234 > r42
234 >= r42
235 != r42
235 * r42
235 + r42
235 - r42
235 / r42
235 < r42
235 <= r42
235 = r42
235 == r42
235 > r42
235 >= r42
235 ] r42
236 * r42
236 + r42
236 - r42
236 / r42
236 ; r42
237 ( r19
237 ; r19
237 ID r19
237 NUM r19
237 if r19
237 return r19
237 while r19
237 { r19
237 } r19
238 ( s56
238 ; s57
238 ID s58
238 NUM s59
238 call s43
238 compou_body s44
238 expre s45
238 expre_arith s46
238 expre_rel s47
238 factor s48
238 if s60
238 lines s265
238 lines_asg s50
238 lines_loop s51
238 lines_return s52
238 lines_select s53
238 return s61
238 term s54
238 var s55
238 while s62
238 { s63
239 ( s288
240 ( r22
240 ; r22
240 ID r22
240 NUM r22
240 declar_local s282
240 if r22
240 int r22
240 return r22
240 while r22
240 { r22
240 } r22
241 else s289
242 ( s149
242 ID s150
242 NUM s151
242 call s142
242 expre s297
242 expre_arith s144
242 expre_rel s145
242 factor s146
242 term s147
242 var s148
243 ) s247
244 ) s248
245 ) s249
246 ) s250
247 != r63
247 ) r63
247 * r63
247 + r63
247 , r63
247 - r63
247 / r63
247 < r63
247 <= r63
247 == r63
247 > r63
247 >= r63
248 != r63
248 ) r63
248 * r63
248 + r63
248 - r63
248 / r63
248 < r63
248 <= r63
248 == r63
248 > r63
248 >= r63
249 != r63
249 * r63
249 + r63
249 - r63
249 / r63
249 < r63
249 <= r63
249 == r63
249 > r63
249 >= r63
249 ] r63
250 * r63
250 + r63
250 - r63
250 / r63
250 ; r63
251 ( s112
251 ID s113
251 NUM s114
251 call s105
251 expre s266
251 expre_arith s107
251 expre_rel s108
251 factor s109
251 term s110
251 var s111
252 ( s112
252 ID s113
252 NUM s114
252 call s105
252 expre s267
252 expre_arith s107
252 expre_rel s108
252 factor s109
252 term s110
252 var s111
253 ( s149
253 ) r65
253 ID s150
253 NUM s151
253 arg_list s140
253 args s298
253 call s142
253 expre s143
253 expre_arith s144
253 expre_rel s145
253 factor s146
253 term s147
253 var s148
254 ( s112
254 ID s113
254 NUM s114
254 call s105
254 expre s268
254 expre_arith s107
254 expre_rel s108
254 factor s109
254 term s110
254 var s111
255 ( s149
255 ) r65
255 ID s150
255 NUM s151
255 arg_list s140
255 args s299
255 call s142
255 expre s143
255 expre_arith s144
255 expre_rel s145
255 factor s146
255 term s147
255 var s148
256 ( s112
256 ID s113
256 NUM s114
256 call s105
256 expre s269
256 expre_arith s107
256 expre_rel s108
256 factor s109
256 term s110
256 var s111
257 ) r39
257 , r39
258 != r51
258 ) r51
258 * s80
258 + r51
258 , r51
258 - r51
258 / s81
258 < r51
258 <= r51
258 == r51
258 > r51
258 >= r51
258 op_mul s221
259 != r60
259 ) r60
259 * r60
259 + r60
259 , r60
259 - r60
259 / r60
259 < r60
259 <= r60
259 == r60
259 > r60
259 >= r60
260 != r41
260 ( s153
260 ) r41
260 * r41
260 + r41
260 , r41
260 - r41
260 / r41
260 < r41
260 <= r41
260 == r41
260 > r41
260 >= r41
260 [ s302
261 != r55
261 ) r55
261 * r55
261 + r55
261 , r55
261 - r55
261 / r55
261 < r55
261 <= r55
261 == r55
261 > r55
261 >= r55
262 ) s286
263 ) s287
264 ) s290
265 ( r34
265 ; r34
265 ID r34
265 NUM r34
265 if r34
265 return r34
265 while r34
265 { r34
265 } r34
266 ] s291
267 ] s292
268 ] s293
269 ] s294
270 ) r61
270 * r61
270 + r61
270 , r61
270 - r61
270 / r61
271 ) r43
271 + s72
271 , r43
271 - s73
271 op_add s284
272 ) r56
272 * r56
272 + r56
272 , r56
272 - r56
272 / r56
273 ) r52
273 * s80
273 + r52
273 , r52
273 - r52
273 / s81
273 op_mul s285
274 ) r60
274 * r60
274 + r60
274 , r60
274 - r60
274 / r60
275 ( s96
275 ID s97
275 NUM s98
275 call s89
275 expre s305
275 expre_arith s91
275 expre_rel s92
275 factor s93
275 term s94
275 var s95
276 ( s303
276 ) r41
276 * r41
276 + r41
276 , r41
276 - r41
276 / r41
276 [ s304
277 ) r62
277 * r62
277 + r62
277 , r62
277 - r62
277 / r62
278 ) r51
278 * s80
278 + r51
278 - r51
278 / s81
278 op_mul s222
279 ) r55
279 * r55
279 + r55
279 - r55
279 / r55
280 * s80
280 + r51
280 - r51
280 / s81
280 ] r51
280 op_mul s223
281 * r55
281 + r55
281 - r55
281 / r55
281 ] r55
282 ( r24
282 ; r24
282 ID r24
282 NUM r24
282 code s313
282 declar_var s38
282 if r24
282 int s20
282 return r24
282 type_var s39
282 while r24
282 { r24
282 } r24
283 ( r6
283 ; r6
283 ID r6
283 NUM r6
283 if r6
283 int r6
283 return r6
283 while r6
283 { r6
283 } r6
284 ( s275
284 ID s276
284 NUM s277
284 call s270
284 factor s272
284 term s311
284 var s274
285 ( s275
285 ID s276
285 NUM s277
285 call s270
285 factor s312
285 var s274
286 ) r59
286 * r59
286 + r59
286 - r59
286 / r59
287 * r59
287 + r59
287 - r59
287 / r59
287 ] r59
288 ( s96
288 ID s97
288 NUM s98
288 call s89
288 expre s306
288 expre_arith s91
288 expre_rel s92
288 factor s93
288 term s94
288 var s95
289 ( r36
289 ; r36
289 ID r36
289 M s295
289 NUM r36
289 if r36
289 return r36
289 while r36
289 { r36
290 ( r36
290 ; r36
290 ID r36
290 M s296
290 NUM r36
290 if r36
290 return r36
290 while r36
290 { r36
291 != r42
291 ) r42
291 * r42
291 + r42
291 - r42
291 / r42
291 < r42
291 <= r42
291 == r42
291 > r42
291 >= r42
292 != r42
292 * r42
292 + r42
292 - r42
292 / r42
292 < r42
292 <= r42
292 == r42
292 > r42
292 >= r42
292 ] r42
293 ) r42
293 * r42
293 + r42
293 - r42
293 / r42
294 * r42
294 + r42
294 - r42
294 / r42
294 ] r42
295 ( s56
295 ; s57
295 ID s58
295 NUM s59
295 call s43
295 compou_body s44
295 expre s45
295 expre_arith s46
295 expre_rel s47
295 factor s48
295 if s60
295 lines s308
295 lines_asg s50
295 lines_loop s51
295 lines_return s52
295 lines_select s53
295 return s61
295 term s54
295 var s55
295 while s62
295 { s63
296 ( s56
296 ; s179
296 ID s58
296 NUM s59
296 call s43
296 compou_body s172
296 expre s173
296 expre_arith s46
296 expre_rel s47
296 factor s48
296 if s180
296 lines s307
296 lines_asg s175
296 lines_loop s176
296 lines_return s177
296 lines_select s178
296 return s181
296 term s54
296 var s55
296 while s182
296 { s183
297 ) r66
297 , r66
298 ) s300
299 ) s301
300 ) r63
300 * r63
300 + r63
300 - r63
300 / r63
301 * r63
301 + r63
301 - r63
301 / r63
301 ] r63
302 ( s112
302 ID s113
302 NUM s114
302 call s105
302 expre s309
302 expre_arith s107
302 expre_rel s108
302 factor s109
302 term s110
302 var s111
303 ( s149
303 ) r65
303 ID s150
303 NUM s151
303 arg_list s140
303 args s321
303 call s142
303 expre s143
303 expre_arith s144
303 expre_rel s145
303 factor s146
303 term s147
303 var s148
304 ( s112
304 ID s113
304 NUM s114
304 call s105
304 expre s310
304 expre_arith s107
304 expre_rel s108
304 factor s109
304 term s110
304 var s111
305 ) s314
306 ) s315
307 ( r32
307 ; r32
307 ID r32
307 N2 s320
307 NUM r32
307 else r32
307 if r32
307 return r32
307 while r32
307 { r32
307 } r32
308 ( r33
308 ; r33
308 ID r33
308 NUM r33
308 if r33
308 return r33
308 while r33
308 { r33
308 } r33
309 ] s316
310 ] s317
311 ) r51
311 * s80
311 + r51
311 , r51
311 - r51
311 / s81
311 op_mul s285
312 ) r55
312 * r55
312 + r55
312 , r55
312 - r55
312 / r55
313 ( r36
313 ; r36
313 ID r36
313 M s41
313 NUM r36
313 if r36
313 return r36
313 while r36
313 { r36
313 } s318
314 ) r59
314 * r59
314 + r59
314 , r59
314 - r59
314 / r59
315 ( r36
315 ; r36
315 ID r36
315 M s319
315 NUM r36
315 if r36
315 return r36
315 while r36
315 { r36
316 != r42
316 ) r42
316 * r42
316 + r42
316 , r42
316 - r42
316 / r42
316 < r42
316 <= r42
316 == r42
316 > r42
316 >= r42
317 ) r42
317 * r42
317 + r42
317 , r42
317 - r42
317 / r42
318 ( r19
318 ; r19
318 ID r19
318 NUM r19
318 else r19
318 if r19
318 return r19
318 while r19
318 { r19
318 } r19
319 ( s56
319 ; s179
319 ID s58
319 NUM s59
319 call s43
319 compou_body s172
319 expre s173
319 expre_arith s46
319 expre_rel s47
319 factor s48
319 if s180
319 lines s323
319 lines_asg s175
319 lines_loop s176
319 lines_return s177
319 lines_select s178
319 return s181
319 term s54
319 var s55
319 while s182
319 { s183
320 else s324
321 ) s322
322 ) r63
322 * r63
322 + r63
322 , r63
322 - r63
322 / r63
323 ( r34
323 ; r34
323 ID r34
323 NUM r34
323 else r34
323 if r34
323 return r34
323 while r34
323 { r34
323 } r34
324 ( r36
324 ; r36
324 ID r36
324 M s325
324 NUM r36
324 if r36
324 return r36
324 while r36
324 { r36
325 ( s56
325 ; s179
325 ID s58
325 NUM s59
325 call s43
325 compou_body s172
325 expre s173
325 expre_arith s46
325 expre_rel s47
325 factor s48
325 if s180
325 lines s326
325 lines_asg s175
325 lines_loop s176
325 lines_return s177
325 lines_select s178
325 return s181
325 term s54
325 var s55
325 while s182
325 { s183
326 ( r33
326 ; r33
326 ID r33
326 NUM r33
326 else r33
326 if r33
326 return r33
326 while r33
326 { r33
326 } r33
